var CryptoJS = require('crypto-js');

// CryptoJS.AES.encrypt('222').toString()

r = '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'
key = '31363736373038353233393335303030';
iv = '31363736373038353233393335303030';
res = CryptoJS.AES.decrypt(r, key, {
            iv: iv,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.Pkcs7
        // }).toString(CryptoJS.enc.Utf8)
        }).toString()
console.log(res);


// function strToHexCharCode(str) {
// 　　if(str === "")
// 　　　　return "";
// 　　var hexCharCode = [];
// // 　　hexCharCode.push("0x");
// 　　for(var i = 0; i < str.length; i++) {
// 　　　　hexCharCode.push((str.charCodeAt(i)).toString(16));
// 　　}
// 　　return hexCharCode.join("");
// }
// console.log(strToHexCharCode('1676722853381000'));

function String2Hex(tmp) {
    var str = '';
    for(var i = 0; i < tmp.length; i++) {
        str += tmp[i].charCodeAt(0).toString(16);
    }
    return str;
}
console.log(String2Hex('1676722853381000'));
